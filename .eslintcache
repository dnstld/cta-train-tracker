[{"/Users/denistoledo/Desktop/_webapp/challenges/cta-train-tracker/src/App.tsx":"1","/Users/denistoledo/Desktop/_webapp/challenges/cta-train-tracker/src/services/api.ts":"2","/Users/denistoledo/Desktop/_webapp/challenges/cta-train-tracker/src/components/stations/index.tsx":"3","/Users/denistoledo/Desktop/_webapp/challenges/cta-train-tracker/src/index.tsx":"4","/Users/denistoledo/Desktop/_webapp/challenges/cta-train-tracker/src/pages/Details/index.tsx":"5","/Users/denistoledo/Desktop/_webapp/challenges/cta-train-tracker/src/pages/Stations/index.tsx":"6"},{"size":742,"mtime":1606339958652,"results":"7","hashOfConfig":"8"},{"size":241,"mtime":1606341195540,"results":"9","hashOfConfig":"8"},{"size":2258,"mtime":1606409282589,"results":"10","hashOfConfig":"8"},{"size":198,"mtime":1606414468502,"results":"11","hashOfConfig":"8"},{"size":117,"mtime":1606414336053,"results":"12","hashOfConfig":"8"},{"size":1481,"mtime":1606415943536,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"gzznkk",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/denistoledo/Desktop/_webapp/challenges/cta-train-tracker/src/App.tsx",["27","28"],"/Users/denistoledo/Desktop/_webapp/challenges/cta-train-tracker/src/services/api.ts",[],"/Users/denistoledo/Desktop/_webapp/challenges/cta-train-tracker/src/components/stations/index.tsx",["29","30"],"import React, { useState, useEffect } from 'react';\n\nimport axios from 'axios';\n\n// import api from '../../services/api';\n\n// interface Tracker {\n//   full_name: string;\n//   description: string;\n//   owner: {\n//     login: string;\n//     avatar_url: string;\n//   };\n// }\n\ninterface CTAStationStopObj {\n  STOP_ID: number;\n  DIRECTION: string;\n  STOP_NAME: string;\n  STATION_DESCRIPTIVE_NAME: string;\n  MAP_ID: number;\n  ADA: boolean;\n  RED: boolean;\n  BLUE: boolean;\n  GREEN: boolean;\n  BROWN: boolean;\n  PURPLE: boolean;\n  PURPLE_EXPRESS: boolean;\n  YELLOW: boolean;\n  PINK: boolean;\n  ORANGE: boolean;\n  LOCATION: string;\n}\n\ninterface CTAStations {\n  STATION_NAME: string;\n  STOPS: CTAStationStopObj[];\n}\n\nconst Stations: React.FC = () => {\n  const [stations, setStations] = useState<CTAStations[]>([]);\n\n  useEffect(() => {\n    axios\n      .get(\n        'https://raw.githubusercontent.com/thomasjfox1/cta-stations/master/cta_stations.json',\n      )\n      .then(response => {\n        setStations(response.data);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, [setStations]);\n\n  return (\n    <>\n      {stations.map((station: CTAStations, i) => (\n        <li key={station.STATION_NAME}>\n          {station.STATION_NAME}\n          {station.STOPS.map((stop: CTAStationStopObj) => (\n            <div key={stop.STOP_ID}>\n              <p>{stop.STOP_ID}</p>\n              <p>{stop.DIRECTION}</p>\n              <p>{stop.STOP_NAME}</p>\n              <p>{stop.STATION_DESCRIPTIVE_NAME}</p>\n              <p>{stop.MAP_ID}</p>\n              <p>{stop.LOCATION}</p>\n            </div>\n          ))}\n        </li>\n      ))}\n    </>\n  );\n\n  // const KEY = 'e22345c93ad34bad94edbc2a46fa90ad';\n\n  // const [tracker, setTracker] = useState<Tracker[]>([]);\n\n  // useEffect(() => {\n  //   api\n  //     .get(`?key=${KEY}&max=1&mapid=40360&outputType=JSON`)\n  //     .then(response => {\n  //       console.log([response.data]);\n  //       setTracker([response.data]);\n  //     })\n  //     .catch(error => {\n  //       console.log(error);\n  //     });\n  // }, [setTracker]);\n\n  // return (\n  //   <>\n  //     {tracker.map(item => (\n  //       <li key={item.full_name}>{item.full_name}</li>\n  //     ))}\n  //   </>\n  // );\n};\n\nexport default Stations;\n","/Users/denistoledo/Desktop/_webapp/challenges/cta-train-tracker/src/index.tsx",[],"/Users/denistoledo/Desktop/_webapp/challenges/cta-train-tracker/src/pages/Details/index.tsx",[],"/Users/denistoledo/Desktop/_webapp/challenges/cta-train-tracker/src/pages/Stations/index.tsx",["31"],{"ruleId":"32","severity":1,"message":"33","line":21,"column":9,"nodeType":"34","messageId":"35","endLine":21,"endColumn":20},{"ruleId":"32","severity":1,"message":"33","line":25,"column":9,"nodeType":"34","messageId":"35","endLine":25,"endColumn":20},{"ruleId":"32","severity":1,"message":"33","line":52,"column":9,"nodeType":"34","messageId":"35","endLine":52,"endColumn":20},{"ruleId":"36","severity":1,"message":"37","line":58,"column":44,"nodeType":"38","messageId":"39","endLine":58,"endColumn":45},{"ruleId":"32","severity":1,"message":"33","line":41,"column":9,"nodeType":"34","messageId":"35","endLine":41,"endColumn":20},"no-console","Unexpected console statement.","MemberExpression","unexpected","@typescript-eslint/no-unused-vars","'i' is defined but never used.","Identifier","unusedVar"]