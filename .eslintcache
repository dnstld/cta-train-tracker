[{"/Users/denistoledo/Desktop/_webapp/challenges/cta-train-tracker/src/App.tsx":"1","/Users/denistoledo/Desktop/_webapp/challenges/cta-train-tracker/src/services/api.ts":"2","/Users/denistoledo/Desktop/_webapp/challenges/cta-train-tracker/src/index.tsx":"3","/Users/denistoledo/Desktop/_webapp/challenges/cta-train-tracker/src/pages/Details/index.tsx":"4","/Users/denistoledo/Desktop/_webapp/challenges/cta-train-tracker/src/pages/Stations/index.tsx":"5","/Users/denistoledo/Desktop/_webapp/challenges/cta-train-tracker/src/routes/index.tsx":"6","/Users/denistoledo/Desktop/_webapp/challenges/cta-train-tracker/src/components/Arrivals/index.tsx":"7","/Users/denistoledo/Desktop/_webapp/challenges/cta-train-tracker/src/layouts/Layout/index.tsx":"8"},{"size":310,"mtime":1606445917508,"results":"9","hashOfConfig":"10"},{"size":241,"mtime":1606341195540,"results":"11","hashOfConfig":"10"},{"size":227,"mtime":1606445431342,"results":"12","hashOfConfig":"10"},{"size":1738,"mtime":1606435496846,"results":"13","hashOfConfig":"10"},{"size":2879,"mtime":1606495054959,"results":"14","hashOfConfig":"10"},{"size":354,"mtime":1606416428500,"results":"15","hashOfConfig":"10"},{"size":1299,"mtime":1606436129891,"results":"16","hashOfConfig":"10"},{"size":981,"mtime":1606493949092,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"gzznkk",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/denistoledo/Desktop/_webapp/challenges/cta-train-tracker/src/App.tsx",[],"/Users/denistoledo/Desktop/_webapp/challenges/cta-train-tracker/src/services/api.ts",[],"/Users/denistoledo/Desktop/_webapp/challenges/cta-train-tracker/src/index.tsx",[],"/Users/denistoledo/Desktop/_webapp/challenges/cta-train-tracker/src/pages/Details/index.tsx",["38"],"import React, { useState, useEffect } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\n\nimport axios from 'axios';\n\nimport Arrivals from '../../components/Arrivals';\n\ninterface StopsLocation {\n  ada: boolean;\n  blue: boolean;\n  brn: boolean;\n  direction_id: string;\n  g: boolean;\n  location: {\n    latidude: string;\n    longitude: string;\n  };\n  map_id: string;\n  o: boolean;\n  p: boolean;\n  pexp: boolean;\n  pnk: boolean;\n  red: boolean;\n  station_description_name: string;\n  station_name: string;\n  stop_id: number;\n  stop_name: string;\n  y: boolean;\n}\n\ninterface StationsParams {\n  station: string;\n}\n\ninterface StationName {\n  station_name: string;\n}\n\nconst Details: React.FC = () => {\n  const { params } = useRouteMatch<StationsParams>();\n  const [stationLocations, setStationLocations] = useState<\n    Array<StopsLocation>\n  >([]);\n\n  useEffect(() => {\n    axios\n      .get('https://data.cityofchicago.org/resource/8pix-ypme.json')\n      .then(response => {\n        const { data } = response;\n\n        const stationLStops = data.filter(\n          (station: StationName) => station.station_name === params.station,\n        );\n\n        setStationLocations(stationLStops);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, [params.station, setStationLocations]);\n\n  return (\n    <>\n      <h1>Station: {params.station}</h1>\n\n      {stationLocations &&\n        stationLocations.map((location: StopsLocation) => (\n          <div key={location.stop_id}>\n            <div>\n              <p>{location.station_name}</p>\n              <p>{location.stop_name}</p>\n            </div>\n\n            <Arrivals mapId={location.map_id} />\n          </div>\n        ))}\n    </>\n  );\n};\n\nexport default Details;\n",["39","40","41","42","43"],"/Users/denistoledo/Desktop/_webapp/challenges/cta-train-tracker/src/pages/Stations/index.tsx",["44","45"],"/Users/denistoledo/Desktop/_webapp/challenges/cta-train-tracker/src/routes/index.tsx",[],"/Users/denistoledo/Desktop/_webapp/challenges/cta-train-tracker/src/components/Arrivals/index.tsx",["46"],"import React, { useState, useEffect } from 'react';\n\nimport api from '../../services/api';\n\ninterface eta {\n  arrT: string;\n  destNm: string;\n  destSt: string;\n  prdt: string;\n  staId: string;\n  staNm: string;\n  stpDe: string;\n  stpId: string;\n}\n\ninterface Tracker {\n  ctatt: {\n    errCd: string;\n    errNm: string;\n    eta: eta[];\n    tmst: string;\n  };\n}\n\ninterface DetailsProps {\n  mapId: string;\n}\n\nconst Arrivals: React.FC<DetailsProps> = ({ mapId }) => {\n  const KEY = 'e22345c93ad34bad94edbc2a46fa90ad';\n\n  const [tracker, setTracker] = useState<Tracker[]>([]);\n\n  useEffect(() => {\n    api\n      .get(`?key=${KEY}&max=1&mapid=${mapId}&outputType=JSON`)\n      .then(response => {\n        setTracker([response.data]);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, [setTracker, mapId]);\n\n  return (\n    <>\n      {tracker.map(item => (\n        <li key={item.ctatt.tmst}>\n          {item.ctatt.eta.map(ab => (\n            <div key={ab.arrT}>\n              <p>{ab.destNm}</p>\n              <p>{ab.destSt}</p>\n              <p>{ab.prdt}</p>\n              <p>{ab.staId}</p>\n              <p>{ab.staNm}</p>\n              <p>{ab.stpDe}</p>\n              <p>{ab.stpId}</p>\n            </div>\n          ))}\n        </li>\n      ))}\n    </>\n  );\n};\n\nexport default Arrivals;\n",["47","48","49","50","51"],"/Users/denistoledo/Desktop/_webapp/challenges/cta-train-tracker/src/layouts/Layout/index.tsx",[],{"ruleId":"52","severity":1,"message":"53","line":58,"column":9,"nodeType":"54","messageId":"55","endLine":58,"endColumn":20},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"52","severity":1,"message":"53","line":42,"column":9,"nodeType":"54","messageId":"55","endLine":42,"endColumn":20},{"ruleId":"66","severity":1,"message":"67","line":47,"column":41,"nodeType":"68","messageId":"69","endLine":47,"endColumn":44,"suggestions":"70"},{"ruleId":"52","severity":1,"message":"53","line":41,"column":9,"nodeType":"54","messageId":"55","endLine":41,"endColumn":20},{"ruleId":"56","replacedBy":"71"},{"ruleId":"58","replacedBy":"72"},{"ruleId":"60","replacedBy":"73"},{"ruleId":"62","replacedBy":"74"},{"ruleId":"64","replacedBy":"75"},"no-console","Unexpected console statement.","MemberExpression","unexpected","lines-around-directive",["76"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["77","78"],["76"],[],[],[],[],"padding-line-between-statements",{"messageId":"79","fix":"80","desc":"81"},{"messageId":"82","fix":"83","desc":"84"},"suggestUnknown",{"range":"85","text":"86"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"85","text":"87"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[1032,1035],"unknown","never"]